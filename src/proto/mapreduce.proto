syntax = "proto3";

package mapreduce;

service Master {
    rpc ProcessClientRequest (ClientRequest) returns (Response);
}

service MapperListener {
    rpc ProcessMapRequest (MapRequest) returns (Response);
    rpc GetMapConfig (MapConfigRequest) returns (MapConfig);
}

service ReducerListener {
    rpc ProcessReduceRequest (stream ReduceRequest) returns (Response);
    rpc GetReduceConfig (ReduceConfigRequest) returns (stream ReduceConfig);
}

message ClientRequest {
    string input_filepath = 1;
    string output_filepath = 2;
    string mapper_execpath = 3;
    string reducer_execpath = 4;
    uint64 split_size_bytes = 5;
    uint32 num_reducers = 6;
}

// Should include only one execpath/output_filepath and multiple input_filepaths.
// Stream will contain redundant information (multiple execpaths/output_filepaths).
message ReduceRequest {
    string input_filepath = 1;
    string execpath = 2;
    string output_filepath = 3; 
}

message MapRequest {
    string filepath = 1;
    string execpath = 2;
    uint32 num_reducers = 3;
}

message MapConfigRequest {
    // Later probably id of map request or sth.
    string nothing = 1;
}

message ReduceConfigRequest {
    // Later probably id of map request or sth.
    string nothing = 1;
}

message MapConfig {
    string filepath = 1;
    uint32 num_reducers = 2;
}

// Config should include only one output_filepath and multiple input_filepaths
// That means, (stream ReduceConfig) will contain redundant information (multiple output_filepaths).
// [TODO] Maybe find better solution.
message ReduceConfig {
    string input_filepath = 1;
    string output_filepath = 2;
}

message Response {
    string result = 1;
}